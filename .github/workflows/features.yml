name: Feature mode
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment to run the tests: dev / stage / prod'
        required: true
        default: 'stage'
      browser:
        description: 'Select the  browser to run the tests: chrome / firefox'
        required: true
        default: 'chrome'
      specs:
        description: 'Add the spec file path that you want to run:'
        default: 'cypress/e2e/*.spec.ts'
        required: true
jobs:
  feature-job:
    name: Running tests on feature mode
    # Setting the OS to run the cypress tests
    runs-on: ubuntu-latest
    # Setting the Docker container
    #container:
    # image: cypress/included:12.3.0
    #
    steps:
      #
      - name: Checkout
        uses: actions/checkout@v3
      #
      - name: Get current date
        id: date
        run: |
          echo "date=$(date +'%Y-%m-%d %H-%M')" >> $GITHUB_OUTPUT

      # - name: Conditional to run on STAGE - Copy data from Secrets to cypress.${{github.event.inputs.environment}}.json
      #   if: github.event.inputs.environment == 'stage'
      #   run: |
      #     echo '${{ secrets.CYPRESS_ENV_STAGE }}' > env/cypress.${{github.event.inputs.environment}}.json

      # - name: Conditional to run on PROD - Copy data from Secrets to cypress.env.json
      #   if: github.event.inputs.environment == 'prod'
      #   run:
      #     echo "RUNNING PROD"

      - name: Cypress run ðŸ§ª
        uses: cypress-io/github-action@v5
        with:
          command: npx cypress run --browser ${{github.event.inputs.browser}} --env configFile=${{github.event.inputs.environment}} --spec ${{github.event.inputs.specs}}
  
      - name: Combining all the JSON reports in just one Report
        if: always()
        run: yarn run combine:reports
      
      - name: Create Test Summary
        uses: test-summary/action@v2
        if: always()
        with:
          paths: cypress/reports/junit/**/*.xml
          
      - name: Upload Screenshot
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: 'cypress-screenshot-${{ steps.date.outputs.date }}'
          path: cypress/screenshots

      - name: Upload HTML Test Report
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: 'cypress-test-report-${{ steps.date.outputs.date }}'
          path: cypress/reports/index.html

      - name: Get Test Information from Cypress Report
        id: set_var
        if: always()
        run: |
          content=$(cat /home/runner/work/cypress-web-automation/cypress-web-automation/cypress/reports/combineReports.json)
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo "::set-output name=packageJson::$content"
          
      - name: Adding the values
        env:
          TOTAL_TESTS: ${{fromJson(steps.set_var.outputs.packageJson).stats.tests}}
          PENDING_TESTS: ${{fromJson(steps.set_var.outputs.packageJson).stats.pending}}
          PASS_TESTS: ${{fromJson(steps.set_var.outputs.packageJson).stats.passes}}
          FAILURES_TESTS: ${{fromJson(steps.set_var.outputs.packageJson).stats.failures}}
        run: echo "EXECUTED_TESTS=$(($TOTAL_TESTS - PENDING_TESTS))" >> $GITHUB_ENV
          
      - name: Test Report
        run: | 
         echo "Executed Tests: ${{ env.EXECUTED_TESTS }}"
         echo "Pass Tests: $(( PASS_TESTS ))"
         echo "Fail Tests: $(( FAILURES_TESTS ))"
        
         
      - name: Reading Cypress Report from JSON file
        if: always()
        run: |
          echo "Cypress Report JSON file:\n ${{steps.set_var.outputs.packageJson}}"
        
        
      #echo "::set-output name=packageJson::$content"
      #echo "packageJson={content}" >> $GITHUB_OUTPUT
      
      #content="${content//'%'/'%25'}"
      #content="${content//$'\n'/'%0A'}"
      #content="${content//$'\r'/'%0D'}"
      #echo "${content}"
      
      
     
     
      ##- name: Git ID
      ##if: always()
      ##run: |
      #echo 'JOB LINK: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
      #'JOB NAME: ${{ github.run_name }}
      #'NAME: ${{ inputs.run_name }}
      #'JOB: ${{ github.action.name }}
      #'BRANCH NAME: ${{ github.ref_name }}
      #'JOB STATUS: ${{ job.status }}
      #'JOB ENV: ${{github.event.inputs.environment}}
      #'RUNNER NAME': ${{ runner.name }}

      #- name: Cypress run
      #uses: cypress-io/github-action@v5
      #with:
      # command: npx cypress run --browser ${{github.event.inputs.browser}} --env configFile=${{github.event.inputs.environment}} --spec ${{github.event.inputs.specs}}
      #
